## Fusion sq configuration
## Change the paths to fit your installation
## Configured for test data by default
## Optional: define output folders for different stages
## make sure to adjust get_vcf_filepath function in the functions file to suit you file/folder architecture

wdir="~/PycharmProjects/structuralvariation/fusion_sq/"
script_dir = paste0(wdir,"R/")
output_dir=paste0(wdir,"test_data/output/")
input_dir=paste0(wdir,"test_data/input/")
resources_dir=paste0(wdir,"resources/")

## Cohort:
patient_table=paste0(wdir,"test_data/cohort.tsv")

## Directories and output files

# prepare matching intervals
base_dir = output_dir
starfusion_dir=input_dir

# Matching fusion predictions to SVs
analysis_dir = output_dir
manta_dir = input_dir
delly_dir = input_dir
gridss_dir = input_dir


# Report
test_data=T
reports_dir=output_dir

## Optional
expression_data_dir = input_dir
cna_data_dir = input_dir
cna_reports_dir=output_dir
snv_dir = input_dir
snv_summary_dir = output_dir


#### No changes required below
reference = "GRCh38_gencode_v31_CTAT_lib_Oct012019"

fusion_annotation_outfile = "fusion_annotation."
matching_intervals_outfile = "matching_intervals."
total_matching_intervals_outfile = "total_matching_intervals."
transcript_table_outfile = "transcript_table."

# Matching fusion predictions to SVs
columns_bplevel = c("bp_name","normal_af","tumor_af")
intervals_lst = c("gup_adjacent_intron","gdw_adjacent_intron","gup_sjrange","gdw_sjrange","gup_flanking","gdw_flanking","gup_adjacent_genebody","gdw_adjacent_genebody","gup_gene_coordinates","gdw_gene_coordinates")

linking_table_outfile = "linking_table."
linking_table_composite_outfile = "linking_table_composite."
supporting_breakpoints_outfile = "supporting_breakpoints."
supporting_breakpoints_composite_outfile = "supporting_breakpoints_composite."

# Report
## Patient level reports
matching_results_outfile = "matching_results."
fusion_level_results_outfile= "fusion_level_results."
fusion_tx_selection_outfile = "transcript_selection."
pairwise_overlap_merged_outfile = "pairwise_overlap_sv_merged."
supporting_svs_outfile="supporting_svs."

proximate_bp = c("intron","intron_consensus","sj","flank","composite")

## Cohort level report
fusion_overview_outfile = "fusion_overview.tsv"
cohort_matching_results_outfile = "cohort_matching_results.tsv"
cohort_fusion_level_results_outfile = "cohort_fusion_level_results.tsv"
cohort_supporting_svs_outfile = "cohort_supporting_svs.tsv"
cohort_pairwise_overlap_merged_outfile = "cohort_pairwise_overlap_sv_merged.tsv"


## Cohort annotation
cohort_report_outfile = "cohort_report.tsv"
fusion_overview_anno_outfile = "fusion_overview.anno.tsv"
patient_oriented_table_outfile = "patient_oriented_table.fusions.tsv"
recurrence_table_outfile = "recurrence_table.tsv"
uq_fusions_outfile = "uq_patient_fusions.tsv"
uq_fusions_oncotsg_outfile = "uq_patient_fusions.oncotsg.tsv"
uq_gene_pairs_outfile = "uq_gene_pairs.tsv"

close_intervals=c("intron","intron_consensus","flank","sj")

## SV level analysis 
cohort_supporting_sv_anno_outfile = "cohort_supporting_svs.anno.tsv"
gene_tx_table_outfile = "gene_tx_table.tsv"
population_sv_database_matches_outfile="population_sv_database_matches.tsv"

# Expression analysis
expression_gene_file_ext = "_RNA-Seq.gene_id.exon.counts.txt"
gene_expression_zcore_outfile = "gene_expression_zscore.tsv"

## SNV analysis ##
### Input
somatic_panel_file = "hg38_diagnostic_somatic_2.1.format.bed"

## Output
#currently only somatic SNVs are implemented, germline possible but different input files and different gene panel

## Patient level output
snv_somatic_summary_outfile = "snv_summary.somatic."
snv_gene_summary_outfile = "snv_gene_summary.somatic."
snv_cds_mapping_outfile = "snv_cds_mapping.somatic."

## SNV cohort overview output
ssnv_overview_path = "snv_overview.somatic.tsv"
snv_cds_overview_path = "snv_cds_overview.somatic.tsv"
patient_oriented_snv_table_outfile = "patient_oriented_snv_table.tsv"
impact_diagnostic_panel_snvs_outfile = "impact_diagnostic_panel_snvs.tsv"


## ENDOF SNV analysis ##


### CNA analysis

cna_seg_file_ext = ".called.seg"
expected_autosomal_length = 3088269832-156040895-57227415

fga_per_chrom_outfile="fga_per_chrom."
cohort_fga_per_chrom_outfile="cohort_fga_per_chrom.tsv"

#map cna to sv
svs_cna_outfile="svs_cna."
svs_overlaps_outfile="overlaps_svs_cna."
svs_cna_flanking_outfile="svs_cna_flanking."

cna_target_regions_outfile = "cna_target_regions." 
cohort_cna_target_regions_outfile = "cohort_cna_target_regions." 
cohort_svs_cna_flanking_outfile = "cohort_svs_cna_flanking.tsv"

## ENDOF CNA


##




## External resources

chimerseq_file = "ChimerSeq4.overview.tsv"
mitelman_file = "mitelman.mcgene.20201015.20210107.tsv"
cosmic_file = "cosmic_cancer_gene_census.v92.20200921.tsv"
kinases_file = "Kincat_Hsap.20210116.tsv"
grobner_recurrent_file = "grobner_stable20_genes_recurrent.tsv"
grobner_druggable_file = "grobner_stable22_genes_druggable.tsv"
oncokb_file = "oncoKB_cancerGeneList_20210414.tsv"
chromosome_bands_file = "chromosome_bands.gz"
transcriptionfactors_file = "Lambert_2018_human_tfs_v_1.01.crop.tsv"
gencode_annotation_file = "gencode.v31.metadata.Annotation_remark.gz"
repeatmasker_file="repeatmasker.gz"
segmental_duplications_file = "segmental_duplications.gz"

## ENDOF external resources

## SV database overlaps
database_overlaps_outfile = "database_overlaps." #then with .anno. for annotated

